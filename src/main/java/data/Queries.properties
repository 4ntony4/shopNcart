### Queries

getLastClientId = SELECT max(client_id) As lastClientId FROM stm.stm_site_client;

insertSiteClient = INSERT INTO stm.stm_site_client (site_id, client_id, client_ds) VALUES (?, ?, ?);
insertSiteSession = INSERT INTO stm.stm_site_session (site_id, session_tk, client_id, created_dt, updated_dt) VALUES (?, ?, ?, ?, ?);

updateSiteSession = UPDATE stm.stm_site_session SET updated_dt = ? WHERE (site_id = ?) AND (session_tk = ?);

selectAllAvlSiteProductsDs = SELECT product_ds FROM stm.stm_product AS p INNER JOIN stm.stm_site_product AS sp ON p.product_id = sp.product_id AND sp.site_id = ? AND p.product_st = "AVL";
selectAllAvlSiteProducts = SELECT * FROM stm.stm_product AS p INNER JOIN stm.stm_site_product AS sp ON p.product_id = sp.product_id AND sp.site_id = ? AND p.product_st = "AVL";

initialProducts = SELECT f.* FROM (WITH subquery AS (SELECT t1.* FROM (SELECT ROW_NUMBER() OVER (PARTITION BY spp.product_id ORDER BY spp.start_dt DESC) AS rowNum,	spp.site_id, spp.currency_cd, spp.start_dt, spp.price_vl, spp.price_st, p.* FROM stm.stm_site_product_price as spp INNER JOIN stm.stm_product as p ON p.product_id = spp.product_id AND spp.site_id = ? AND p.product_st = "AVL" LIMIT 120) AS t1 WHERE (rowNum = 1 OR rowNum = 2) LIMIT 48) SELECT ROW_NUMBER() OVER (PARTITION BY a.product_id ORDER BY a.start_dt DESC) AS rowNum2, COUNT(*) OVER (PARTITION BY a.product_id) AS sameProductCount, b.start_dt as previous_start_dt, b.price_vl as previous_price_vl, b.price_st as previous_price_st, a.* FROM subquery AS a, subquery AS b WHERE a.site_id = b.site_id AND a.product_id = b.product_id AND a.currency_cd = b.currency_cd AND a.start_dt >= b.start_dt) AS f WHERE ( (sameProductCount = 1 AND f.start_dt = f.previous_start_dt) OR (sameProductCount <> 1 AND f.start_dt > f.previous_start_dt) ) ORDER BY CASE WHEN f.price_st = "NEW" THEN 1 WHEN f.price_st = "SAL" THEN 2 ELSE 3 END LIMIT 24;

